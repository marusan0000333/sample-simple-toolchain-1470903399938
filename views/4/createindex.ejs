<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bousai-Go</title>
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
    
    <script src="http://api.its-mo.com/cgi/loader.cgi?key=JSZf2b54f3ee3d0&ver=2.0&api=zdcmap.js,shape.js,search.js&enc=UTF8&force=1" type="text/javascript"></script>

<script type="text/javascript">
//<![CDATA[
    var map;
    var latLons = [];
    var cnt = 1;

    //日本, 〒812-0011 福岡県福岡市博多区博多駅前３丁目２?１ 日本生命博多駅前ビル 33.585400833, 130.420721667
    //明治公園 33.585351944 130.420049444
    //日本, 〒812-0011 福岡県福岡市博多区博多駅前４丁目１１?１２ 東住吉公民館 33.582903056 130.420793889

    function loadMap() {
    	//initialize
    	latLons = [];
    	cnt = 1;
    	
        map = new ZDC.Map(
            document.getElementById("ZMap"),
            {
            	latlon: new ZDC.LatLon('33.585400833', '130.420721667'),
                zoom: 11
            });

        /* 地図上の緯度経度を取得(getPointerPosition)できるようにする */
        map.pointerPositionOn();
        
        /* 地図をクリックしたときの動作 */
        ZDC.addListener(map, ZDC.MAP_CLICK, getClickLatLon);
    }

    function getClickLatLon() {
        var pl, mrk;
        if (cnt > 10) return;

        /* クリックした緯度経度を保存 */
        var itemLatLon = map.getClickLatLon();
        latLons.push(itemLatLon);

        /* クリックした地点にマーカを作成 */
        mrk = new ZDC.Marker(map.getClickLatLon(),{
            color: ZDC.MARKER_COLOR_ID_BLUE_S,
            number: ZDC["MARKER_NUMBER_ID_" + cnt + "_S"]
        });

        /* マーカを追加 */
        map.addWidget(mrk);
        
        /* マーカにイベントを追加 */
        ZDC.addListener(mrk, ZDC.MARKER_MOUSEMOVE, onMouseMove);
        ZDC.addListener(mrk, ZDC.MARKER_MOUSEDOWN, onMouseDown);
        ZDC.addListener(mrk, ZDC.MARKER_MOUSEUP, onMouseUp);
                
        /* クリックした地点に線を引く */
        if (cnt > 1) {
            var lineLatLons = [];

            lineLatLons.push(latLons[(cnt-2)]);
            lineLatLons.push(itemLatLon);
            pl = new ZDC.Polyline(lineLatLons,
                {
                    strokeWeight: 2,
                    strokeColor: "#FF0000" 
            });

            /* 線を地図に追加 */
            map.addWidget(pl);
        }
        cnt++;

        /* documentにイベントを追加 */
        ZDC.addDomListener(document, 'mouseup', onMouseUp);

    }

    function routeSearch() {
        if (latLons.length < 2) {
            alert("2ヶ所以上の地点を指定してください。");
            return false;
        } 

        /* 点列から移動経路を推定 */
        ZDC.Search.getRoadLinkByLatlons({
            latlons: latLons
            }, function(status, res) {
                if (status.code == "000") {
                    /* 取得成功 */
                    routeDisp(status, res);
                } else {
                    /* 取得失敗 */
                    alert(status.text);
                }
        });
    }

    /* 点列補正 */
    function routeDisp(status, res) {
        var item = res.item;
        for (var i = 0, k = item.length; i < k; i++) {
            var plRoute, ll = [];
            for (var j = 0, l = item[i].roadLink.latlons.length; j < l; j++) {
                ll.push(item[i].roadLink.latlons[j]);
            }
            /* 移動経路の線を引く */
            plRoute = new ZDC.Polyline(ll,
                {
                    strokeWeight: 3,
                    strokeColor: "#800080"
                });

            /* 線を地図に追加 */
            map.addWidget(plRoute);
        }
    }

    /* マウスダウンイベント処理 */
    function onMouseDown() {
        /* マウスダウン位置の緯度経度とマーカの緯度経度の差分を保持 */
        var cLatLon = map.getPointerPosition();
        difLat = cLatLon.lat - mkrLatLon.lat;
        difLon = cLatLon.lon - mkrLatLon.lon;
        dragging = true;
    }

    /* マウスムーブイベント処理 */
    function onMouseMove() {
        /* ドラッグ中のみ処理させる */
        if(dragging) {
            var latlon = map.getPointerPosition();

            /* マーカ表示緯度経度を取得 */
            var mkLat = latlon.lat - difLat;
            var mkLon = latlon.lon - difLon;
            mkrLatLon = new ZDC.LatLon(mkLat, mkLon);
            mrk.moveLatLon(mkrLatLon);
        }
    }

    /* マウスアップイベント処理 */
    function onMouseUp() {
        if(dragging) {
            dragging = false;
        }
    }
//]]>
</script>
  </head>
  <body onload="loadMap()">
    <div class="container">
      <h1>クエスト作成<small> / 更新日時：2016/6/1 14:01:30</small></h1>
	<p>ゲームを作ってボウサイを学ぼう。災害を想像してゲームを作成する体験を”DIG”を体験しましょう。</p>

	<br>
        <label for="title">クエスト名</label> 
        <input type="text" class="form-control" id="game_name" name="game_name" maxlength='28' placeholder="ゲーム名" value="デモ用ゲーム１" required>
	<br>

	<h2>避難プロローグ</h2>
      <div class="form-group">
        <label for="title">日時・天気・気温</label> 
        <input type="text" class="form-control" id="game_templ" name="game_templ" maxlength='28' placeholder="季節" value="2016/8/28 16:00頃　晴れ　31度" required>
	<br>
        <label for="title">被災場所</label> 
        <input type="text" class="form-control" id="game_field" name="game_field" maxlength='28' placeholder="場所" value="イノベーションハブ九州会場" required>
	<br>
        <label for="title">状況</label> 
        <input type="text" class="form-control" id="game_situ" name="game_situ" maxlength='28' placeholder="状況" value="イベント会場に来ているため、手持ち防災具なし。ペットボトルの水のみ" required>
      </div>

	<h2>避難ルート</h2>
  <p>カードの追加・削除によって、自動的に経路が算出される（予定です）</p>
  <div id="ZMap" style="border:1px solid #777777; width:90%; height:300px;"></div>
<!--    <div style="bottom:10px; left:10px; position:absolute;"> -->
	<p>ルートを表示</p>
	</br>

	<h2>チェックポイントクイズ</h2>
	<p>避難途中にチェックポイントをおいて、ボウサイカードをもちいたクイズを登録します</p>
      <div class="table-responsive">
        <table class="table table-striped table-hover">
          <thead>
            <tr>
              <th class="col-sm-8">カード名</th>
              <th class="col-sm-3 text-center">更新日時</th>
            </tr>
          </thead>
          <tbody>
            <% list.forEach(function(row) { %>
            <tr>
              <td>
                <a href="#" data-remote="/memos4/<%= row.id %>" data-toggle="modal" data-target="#dialog" data-backdrop="static" data-keyboard="false"><%= row.title %></a>
              </td>
              <td class="text-center">
                <%= row.updatedAt %>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
      <div class="modal" id="dialog" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content"></div>
        </div>
      </div>
    </div>
  <div class="modal-footer">
    <span style="color:#dddddd;">デモ版では右記ボタンは使用できません</span>
    <button type="button" class="btn btn-info">カード追加</button>
    <button type="button" class="btn btn-info">カード削除</button>
    <button type="button" class="btn btn-primary">クエスト保存</button>
    <button type="button" class="btn btn-primary">キャンセル</button>
  </div>

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script type="text/javascript">
      $(document).ready(function() {
        $(document).on("hidden.bs.modal", function(event) {
          $(event.target).removeData("bs.modal").find(".modal-content").empty();
        });
      });
    </script>
  </body>
</html>